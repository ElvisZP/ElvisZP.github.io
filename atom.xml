<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ElvisZP</title>
  <subtitle>记录成长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-23T04:29:04.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zhang peng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>改变</title>
    <link href="http://yoursite.com/2016/11/23/2016-11-23%20%E6%94%B9%E5%8F%98/"/>
    <id>http://yoursite.com/2016/11/23/2016-11-23 改变/</id>
    <published>2016-11-23T03:56:49.000Z</published>
    <updated>2016-11-23T04:29:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>自从11年开始编码，至今5年。前面两三年处于摸索阶段，没什么成长。最近两年，或多或少积累了点开发经验，由于不善于表达，之前都是断断续续的记在笔记里，没有形成体系，也影响了个人的技术成长。<br><a id="more"></a><br>在这个时间点上，还是打算做出一点改变，即使大部分内容网上都已有相关文章，也需要总结出来，算是强迫自己写点东西，做出改变。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自从11年开始编码，至今5年。前面两三年处于摸索阶段，没什么成长。最近两年，或多或少积累了点开发经验，由于不善于表达，之前都是断断续续的记在笔记里，没有形成体系，也影响了个人的技术成长。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Autolayout布局实例</title>
    <link href="http://yoursite.com/2016/11/23/2016-11-24%20Autolayout%E5%B8%83%E5%B1%80%E5%AE%9E%E4%BE%8B/"/>
    <id>http://yoursite.com/2016/11/23/2016-11-24 Autolayout布局实例/</id>
    <published>2016-11-23T03:56:49.000Z</published>
    <updated>2016-11-23T16:42:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近Xib+Autolayout用的比较多，也学习到不少内容，在这里总结出来。</p>
<h2 id="Label布局"><a href="#Label布局" class="headerlink" title="Label布局"></a>Label布局</h2><p>一般情况下，只需设置其左边距、上边距约束即可。<br><img src="/images/14799173962097.jpg" alt="-w400"></p>
<p>我们知道，一般UIView布局，如果仅设置其左边距、上边距约束，那么Xcode就会报错，需要你加上宽高约束。那么为什么UILabel却不会报错呢？原因在于Label是自带内容的View，只要你设置了文本，那么它就能根据内容，自动计算出大小。同理，UIButton也是一样的。<br>另外还有一种特殊情况，就是你需要多行展示文本的时候，<a id="more"></a>这种情况下你就必须设置其宽度或者其右边距，同时将Lines属性设为0，否则它们不知道在什么宽度的情况下换行。如图：<br><img src="/images/14799182141013.jpg" alt="-w400"></p>
<h2 id="⌘-快捷键"><a href="#⌘-快捷键" class="headerlink" title="⌘ + = 快捷键"></a>⌘ + = 快捷键</h2><p>Command键加=，能够自动将View设为与内容相适应的大小。<br><img src="/images/14799189164759.jpg" alt="-w300"><br>文字有部分未显示出来，此时按下快捷键，快速适应大小。<br>最方便的还是在添加UIImageView的时候，一般你拖出一张图片到xib上是这样的：<br><img src="/images/14799190296407.jpg" alt="-w300"><br>默认就是这样大小，如果此时你有一个小小的icon要加上去，那么效果是这样的：<br><img src="/images/14799191933631.jpg" alt="-w300"><br>一般情况下，你需要的是将UIImageView改为原图大小，那么现在最方便的就是按下快捷键：<br><img src="/images/14799192727895.jpg" alt="-w300"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近Xib+Autolayout用的比较多，也学习到不少内容，在这里总结出来。&lt;/p&gt;
&lt;h2 id=&quot;Label布局&quot;&gt;&lt;a href=&quot;#Label布局&quot; class=&quot;headerlink&quot; title=&quot;Label布局&quot;&gt;&lt;/a&gt;Label布局&lt;/h2&gt;&lt;p&gt;一般情况下，只需设置其左边距、上边距约束即可。&lt;br&gt;&lt;img src=&quot;/images/14799173962097.jpg&quot; alt=&quot;-w400&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们知道，一般UIView布局，如果仅设置其左边距、上边距约束，那么Xcode就会报错，需要你加上宽高约束。那么为什么UILabel却不会报错呢？原因在于Label是自带内容的View，只要你设置了文本，那么它就能根据内容，自动计算出大小。同理，UIButton也是一样的。&lt;br&gt;另外还有一种特殊情况，就是你需要多行展示文本的时候，
    
    </summary>
    
    
  </entry>
  
</feed>
